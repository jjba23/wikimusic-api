stages:
  - build
  - notify-queue

build-job:
  stage: build
  tags:
    - saas-linux-large-amd64
  image: nixos/nix
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script: |
    unset TMPDIR
    nix --extra-experimental-features 'nix-command flakes' --accept-flake-config develop -c cachix authtoken $CACHIX_TOKEN
    nix --extra-experimental-features 'nix-command flakes' --accept-flake-config build

build-publish-cache-job:
  stage: build
  tags:
    - saas-linux-large-amd64
  image: nixos/nix
  only:
    refs:
      - trunk
  script: |
    unset TMPDIR
    nix --extra-experimental-features 'nix-command flakes' --accept-flake-config develop -c cachix authtoken $CACHIX_TOKEN
    nix --extra-experimental-features 'nix-command flakes' --accept-flake-config build
    nix --extra-experimental-features 'nix-command flakes' --accept-flake-config develop -c make push-cache

notify-queue:
  image: nixos/nix:master
  stage: notify-queue
  only:
    refs:
      - trunk
  before_script: |
    mkdir $HOME/.aws
    echo "[default]" >> $HOME/.aws/config
    echo "region = eu-west-3" >> $HOME/.aws/config
    echo "[default]" >> $HOME/.aws/credentials
    echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> $HOME/.aws/credentials
    echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> $HOME/.aws/credentials
  script: |
    unset TMPDIR
    nix-shell -p awscli2 --run "aws sqs send-message --queue-url $SQS_QUEUE_URL --message-body '{\"sha\": \"$CI_COMMIT_SHA\"}' --message-group-id \"lambda\""

